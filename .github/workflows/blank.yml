name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build_react:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend/pingwiny

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: './frontend/pingwiny/package-lock.json'

      - name: Install dependencies
        run: npm install --force

      - name: Build
        run: npm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: 'penguins-agh'
          path: './frontend/pingwiny/build'

  build_python:
    runs-on: ubuntu-latest

    needs: build_react

    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
     
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
        
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Set up dependency caching for faster installs
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: 'python-app'
          path: |
            .
            !venv/

  deploy_react:
    runs-on: ubuntu-latest
    
    needs: deploy_react
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: 'penguins-agh'

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'penguins-agh'
          slot-name: 'Production'
          publish-profile: '<publishData><publishProfile profileName="penguins-agh - Web Deploy" publishMethod="MSDeploy" publishUrl="penguins-agh.scm.azurewebsites.net:443" msdeploySite="penguins-agh" userName="$penguins-agh" userPWD="z75HiDqdqChbuZPXjJ2XoYLJYld69ekm8nNMmwikT1WxnG0iy6pPoRQser5T" destinationAppUrl="http://penguins-agh.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="penguins-agh - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-am2-611.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="penguins-agh\$penguins-agh" userPWD="z75HiDqdqChbuZPXjJ2XoYLJYld69ekm8nNMmwikT1WxnG0iy6pPoRQser5T" destinationAppUrl="http://penguins-agh.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="penguins-agh - Zip Deploy" publishMethod="ZipDeploy" publishUrl="penguins-agh.scm.azurewebsites.net:443" userName="$penguins-agh" userPWD="z75HiDqdqChbuZPXjJ2XoYLJYld69ekm8nNMmwikT1WxnG0iy6pPoRQser5T" destinationAppUrl="http://penguins-agh.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>'
          package: '.'

  deploy_python:
    runs-on: ubuntu-latest

    needs: deploy_react

    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: 'python-app'
          path: .

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'penguins-agh-rest'
          publish-profile: <publishData><publishProfile profileName="penguins-agh-rest - Web Deploy" publishMethod="MSDeploy" publishUrl="penguins-agh-rest.scm.azurewebsites.net:443" msdeploySite="penguins-agh-rest" userName="$penguins-agh-rest" userPWD="jZfPhb07nbZHb1FizgHqmDlcoodGzf5MqkFl1RpeocGdPwMh94WgufWrdqTB" destinationAppUrl="http://penguins-agh-rest.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="penguins-agh-rest - FTP" publishMethod="FTP" publishUrl="ftps://waws-prod-am2-625.ftp.azurewebsites.windows.net/site/wwwroot" ftpPassiveMode="True" userName="penguins-agh-rest\$penguins-agh-rest" userPWD="jZfPhb07nbZHb1FizgHqmDlcoodGzf5MqkFl1RpeocGdPwMh94WgufWrdqTB" destinationAppUrl="http://penguins-agh-rest.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile><publishProfile profileName="penguins-agh-rest - Zip Deploy" publishMethod="ZipDeploy" publishUrl="penguins-agh-rest.scm.azurewebsites.net:443" userName="$penguins-agh-rest" userPWD="jZfPhb07nbZHb1FizgHqmDlcoodGzf5MqkFl1RpeocGdPwMh94WgufWrdqTB" destinationAppUrl="http://penguins-agh-rest.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="http://windows.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>
          package: '.'

    
